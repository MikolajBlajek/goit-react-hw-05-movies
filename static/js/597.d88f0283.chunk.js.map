{"version":3,"file":"static/js/597.d88f0283.chunk.js","mappings":"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","sources":["components/Api.jsx","components/Cast.jsx","components/StyledComponents.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = BASE_URL;\n\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1YWJiYjNkYmY5YTc4YmYzMzg4NzQ2NWRjMzNkYmZhMyIsInN1YiI6IjY1ZTg4NWM2MmIxYjQ0MDE4NzZhMWI5NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zhBueR8wNg5cCNXzyHxhDQn0OaW1VXF-Xqm42zVWZhg';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios.get('/trending/movie/day');\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n}\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: { query },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error during API call:', error);\n    throw error;\n  }\n};\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie by id:', error);\n    throw error;\n  }\n}\n\n\nexport async function fetchMovieCredits(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  } \n}\n\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`); \n    console.log(response);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from './Api';\nimport { PageContainer, ContentList, ContentItem } from './StyledComponents';\n\nimport styled from 'styled-components';\n\nconst ActorImage = styled.img`\n  width: 100px;\n  height: auto;\n  border-radius: 20%;\n  margin-right: 10px;\n`;\n\nconst ActorName = styled.span`\n  color: black;\n  font-weight: bold;\n`;\n\nconst ActorContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getMovieCredits = async () => {\n      try {\n        const castData = await fetchMovieCredits(movieId);\n        setCast(castData || []);\n      } catch (error) {\n        console.error('Error fetching movie credits:', error);\n      }\n    };\n\n    getMovieCredits();\n  }, [movieId]);\n\n  return (\n    <PageContainer>\n      <ContentList>\n        {cast.map(actor => (\n          <ContentItem key={actor.id}>\n            <ActorContainer>\n              <ActorImage\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                    : 'placeholder_image_url_here'\n                }\n                alt={actor.name}\n              />\n              <ActorName>{actor.name}</ActorName>\n            </ActorContainer>\n          </ContentItem>\n        ))}\n      </ContentList>\n    </PageContainer>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const PageContainer = styled.div`\n  color: #333; \n  background-color: #f5f5f5; \n  padding: 20px;\n  text-align: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: #333;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const ContentList = styled.ul`\n  list-style-type: none;\n  padding: 24px;\n  font-size: 24px;\n`;\n\nexport const ContentItem = styled.li`\n  padding: 10px;\n  margin: auto;\n  font-size: 24px;\n  font-weight: 300;\n  color: #333; /* Ciemny szary */\n`;\n\nexport const ToggleButton = styled.button`\n  background: none;\n  border: none;\n  color: #333;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const SearchForm = styled.form`\n  margin: 20px 0;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 5px;\n  margin-right: 10px;\n  border-radius: 5px;\n  border: 1px solid #333; \n  background-color: #f5f5f5;\n`;\n\nexport const SearchButton = styled.button`\n  padding: 5px 10px;\n  border-radius: 5px;\n  border: none;\n  color: #333;\n  background-color: #f5f5f5;\n  cursor: pointer;\n  &:hover {\n    background-color: #ddd; \n  }\n`;\n"],"names":["fetchTrendingMovies","_fetchTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee2","response","_context2","prev","next","axios","sent","abrupt","data","results","t0","console","error","stop","searchMovies","_ref","_callee","query","_context","params","_x","fetchMovieById","_x2","_fetchMovieById","_callee3","movieId","_context3","concat","fetchMovieCredits","_x3","_fetchMovieCredits","_callee4","_context4","cast","fetchMovieReviews","_x4","_fetchMovieReviews","_callee5","_context5","log","ActorImage","styled","_templateObject","_taggedTemplateLiteral","ActorName","_templateObject2","ActorContainer","_templateObject3","Cast","useParams","_useState","useState","_useState2","_slicedToArray","setCast","useEffect","getMovieCredits","castData","_jsx","PageContainer","children","ContentList","map","actor","ContentItem","_jsxs","src","profile_path","alt","name","id","StyledLink","Link","_templateObject4","SearchForm","_templateObject5","_templateObject6","SearchInput","_templateObject7","SearchButton","_templateObject8"],"sourceRoot":""}